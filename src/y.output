   0  $accept : list $end

   1  list :
   2       | list '\n'
   3       | list linea '\n'

   4  linea : exp ';'
   5        | stmt
   6        | linea exp ';'
   7        | linea stmt

   8  exp : VAR
   9      | NUMBER
  10      | VAR '[' initNum ']' '=' '{' listaDeListas '}'
  11      | VAR '=' exp
  12      | exp '*' exp
  13      | exp '+' exp
  14      | exp '-' exp
  15      | '(' exp ')'
  16      | exp COMP exp
  17      | exp DIFERENTES exp
  18      | exp MEN exp
  19      | exp MENI exp
  20      | exp MAY exp
  21      | exp MAYI exp
  22      | exp AND exp
  23      | exp OR exp
  24      | '!' exp
  25      | FNCT '[' exp ']'
  26      | RETURN exp
  27      | PARAMETRO
  28      | nombreProc '(' arglist ')'

  29  arglist :
  30          | exp
  31          | instrucciones ',' exp

  32  stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' ELSE '{' linea stop_ '}'
  33       | if_ '(' exp stop_ ')' '{' linea stop_ '}' stop_
  34       | while_ '(' exp stop_ ')' '{' linea stop_ '}' stop_
  35       | for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_
  36       | funcion nombreProc '(' ')' '{' linea null_ '}'
  37       | procedimiento nombreProc '(' ')' '{' linea null_ '}'

  38  procedimiento : PROC

  39  funcion : FUNC

  40  nombreProc : VAR

  41  null_ :

  42  stop_ :

  43  if_ : IF

  44  while_ : WHILE

  45  for_ : FOR

  46  instrucciones :
  47                | exp
  48                | instrucciones ',' exp

  49  initNum : NUMBER

  50  listaDeListas : lista
  51                | listaDeListas '|' lista

  52  lista : NUMBER
  53        | lista ',' NUMBER

state 0
	$accept : . list $end  (0)
	list : .  (1)

	.  reduce 1

	list  goto 1


state 1
	$accept : list . $end  (0)
	list : list . '\n'  (2)
	list : list . linea '\n'  (3)

	$end  accept
	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'\n'  shift 13
	'('  shift 14
	.  error

	linea  goto 15
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 2
	if_ : IF .  (43)

	.  reduce 43


state 3
	while_ : WHILE .  (44)

	.  reduce 44


state 4
	for_ : FOR .  (45)

	.  reduce 45


state 5
	exp : FNCT . '[' exp ']'  (25)

	'['  shift 24
	.  error


state 6
	exp : NUMBER .  (9)

	.  reduce 9


state 7
	exp : VAR .  (8)
	exp : VAR . '[' initNum ']' '=' '{' listaDeListas '}'  (10)
	exp : VAR . '=' exp  (11)
	nombreProc : VAR .  (40)

	'='  shift 25
	'['  shift 26
	COMP  reduce 8
	DIFERENTES  reduce 8
	MAY  reduce 8
	MEN  reduce 8
	MAYI  reduce 8
	MENI  reduce 8
	AND  reduce 8
	OR  reduce 8
	'+'  reduce 8
	'-'  reduce 8
	'*'  reduce 8
	';'  reduce 8
	']'  reduce 8
	'('  reduce 40
	')'  reduce 8
	','  reduce 8


state 8
	funcion : FUNC .  (39)

	.  reduce 39


state 9
	exp : RETURN . exp  (26)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 27
	nombreProc  goto 18


state 10
	exp : PARAMETRO .  (27)

	.  reduce 27


state 11
	procedimiento : PROC .  (38)

	.  reduce 38


state 12
	exp : '!' . exp  (24)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 28
	nombreProc  goto 18


state 13
	list : list '\n' .  (2)

	.  reduce 2


state 14
	exp : '(' . exp ')'  (15)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 29
	nombreProc  goto 18


state 15
	list : list linea . '\n'  (3)
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'\n'  shift 30
	'('  shift 14
	.  error

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 16
	linea : exp . ';'  (4)
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	';'  shift 44
	.  error


state 17
	linea : stmt .  (5)

	.  reduce 5


state 18
	exp : nombreProc . '(' arglist ')'  (28)

	'('  shift 45
	.  error


state 19
	stmt : if_ . '(' exp stop_ ')' '{' linea stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ . '(' exp stop_ ')' '{' linea stop_ '}' stop_  (33)

	'('  shift 46
	.  error


state 20
	stmt : while_ . '(' exp stop_ ')' '{' linea stop_ '}' stop_  (34)

	'('  shift 47
	.  error


state 21
	stmt : for_ . '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)

	'('  shift 48
	.  error


state 22
	stmt : funcion . nombreProc '(' ')' '{' linea null_ '}'  (36)

	VAR  shift 49
	.  error

	nombreProc  goto 50


state 23
	stmt : procedimiento . nombreProc '(' ')' '{' linea null_ '}'  (37)

	VAR  shift 49
	.  error

	nombreProc  goto 51


state 24
	exp : FNCT '[' . exp ']'  (25)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 52
	nombreProc  goto 18


state 25
	exp : VAR '=' . exp  (11)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 53
	nombreProc  goto 18


state 26
	exp : VAR '[' . initNum ']' '=' '{' listaDeListas '}'  (10)

	NUMBER  shift 54
	.  error

	initNum  goto 55


state 27
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	exp : RETURN exp .  (26)

	.  reduce 26


state 28
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	exp : '!' exp .  (24)

	AND  shift 39
	OR  shift 40
	COMP  reduce 24
	DIFERENTES  reduce 24
	MAY  reduce 24
	MEN  reduce 24
	MAYI  reduce 24
	MENI  reduce 24
	'+'  reduce 24
	'-'  reduce 24
	'*'  reduce 24
	';'  reduce 24
	']'  reduce 24
	')'  reduce 24
	','  reduce 24


state 29
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : '(' exp . ')'  (15)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	')'  shift 56
	.  error


state 30
	list : list linea '\n' .  (3)

	.  reduce 3


state 31
	linea : linea exp . ';'  (6)
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	';'  shift 57
	.  error


state 32
	linea : linea stmt .  (7)

	.  reduce 7


state 33
	exp : exp COMP . exp  (16)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 58
	nombreProc  goto 18


state 34
	exp : exp DIFERENTES . exp  (17)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 59
	nombreProc  goto 18


state 35
	exp : exp MAY . exp  (20)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 60
	nombreProc  goto 18


state 36
	exp : exp MEN . exp  (18)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 61
	nombreProc  goto 18


state 37
	exp : exp MAYI . exp  (21)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 62
	nombreProc  goto 18


state 38
	exp : exp MENI . exp  (19)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 63
	nombreProc  goto 18


state 39
	exp : exp AND . exp  (22)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 64
	nombreProc  goto 18


state 40
	exp : exp OR . exp  (23)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 65
	nombreProc  goto 18


state 41
	exp : exp '+' . exp  (13)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 66
	nombreProc  goto 18


state 42
	exp : exp '-' . exp  (14)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 67
	nombreProc  goto 18


state 43
	exp : exp '*' . exp  (12)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 68
	nombreProc  goto 18


state 44
	linea : exp ';' .  (4)

	.  reduce 4


state 45
	exp : nombreProc '(' . arglist ')'  (28)
	arglist : .  (29)
	instrucciones : .  (46)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	')'  reduce 29
	','  reduce 46

	exp  goto 69
	nombreProc  goto 18
	arglist  goto 70
	instrucciones  goto 71


state 46
	stmt : if_ '(' . exp stop_ ')' '{' linea stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' . exp stop_ ')' '{' linea stop_ '}' stop_  (33)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 72
	nombreProc  goto 18


state 47
	stmt : while_ '(' . exp stop_ ')' '{' linea stop_ '}' stop_  (34)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 73
	nombreProc  goto 18


state 48
	stmt : for_ '(' . instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)
	instrucciones : .  (46)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	';'  reduce 46
	','  reduce 46

	exp  goto 74
	nombreProc  goto 18
	instrucciones  goto 75


state 49
	nombreProc : VAR .  (40)

	.  reduce 40


state 50
	stmt : funcion nombreProc . '(' ')' '{' linea null_ '}'  (36)

	'('  shift 76
	.  error


state 51
	stmt : procedimiento nombreProc . '(' ')' '{' linea null_ '}'  (37)

	'('  shift 77
	.  error


state 52
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	exp : FNCT '[' exp . ']'  (25)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	']'  shift 78
	.  error


state 53
	exp : VAR '=' exp .  (11)
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	';'  reduce 11
	']'  reduce 11
	')'  reduce 11
	','  reduce 11


state 54
	initNum : NUMBER .  (49)

	.  reduce 49


state 55
	exp : VAR '[' initNum . ']' '=' '{' listaDeListas '}'  (10)

	']'  shift 79
	.  error


state 56
	exp : '(' exp ')' .  (15)

	.  reduce 15


state 57
	linea : linea exp ';' .  (6)

	.  reduce 6


state 58
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp COMP exp .  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	COMP  reduce 16
	'+'  reduce 16
	'-'  reduce 16
	'*'  reduce 16
	';'  reduce 16
	']'  reduce 16
	')'  reduce 16
	','  reduce 16


state 59
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp DIFERENTES exp .  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	COMP  reduce 17
	DIFERENTES  reduce 17
	'+'  reduce 17
	'-'  reduce 17
	'*'  reduce 17
	';'  reduce 17
	']'  reduce 17
	')'  reduce 17
	','  reduce 17


state 60
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp MAY exp .  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	COMP  reduce 20
	DIFERENTES  reduce 20
	MAY  reduce 20
	'+'  reduce 20
	'-'  reduce 20
	'*'  reduce 20
	';'  reduce 20
	']'  reduce 20
	')'  reduce 20
	','  reduce 20


state 61
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp MEN exp .  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	MENI  shift 38
	AND  shift 39
	OR  shift 40
	COMP  reduce 18
	DIFERENTES  reduce 18
	MAY  reduce 18
	MEN  reduce 18
	MAYI  reduce 18
	'+'  reduce 18
	'-'  reduce 18
	'*'  reduce 18
	';'  reduce 18
	']'  reduce 18
	')'  reduce 18
	','  reduce 18


state 62
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp MAYI exp .  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	MEN  shift 36
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	COMP  reduce 21
	DIFERENTES  reduce 21
	MAY  reduce 21
	MAYI  reduce 21
	'+'  reduce 21
	'-'  reduce 21
	'*'  reduce 21
	';'  reduce 21
	']'  reduce 21
	')'  reduce 21
	','  reduce 21


state 63
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp MENI exp .  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	AND  shift 39
	OR  shift 40
	COMP  reduce 19
	DIFERENTES  reduce 19
	MAY  reduce 19
	MEN  reduce 19
	MAYI  reduce 19
	MENI  reduce 19
	'+'  reduce 19
	'-'  reduce 19
	'*'  reduce 19
	';'  reduce 19
	']'  reduce 19
	')'  reduce 19
	','  reduce 19


state 64
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp AND exp .  (22)
	exp : exp . OR exp  (23)

	OR  shift 40
	COMP  reduce 22
	DIFERENTES  reduce 22
	MAY  reduce 22
	MEN  reduce 22
	MAYI  reduce 22
	MENI  reduce 22
	AND  reduce 22
	'+'  reduce 22
	'-'  reduce 22
	'*'  reduce 22
	';'  reduce 22
	']'  reduce 22
	')'  reduce 22
	','  reduce 22


state 65
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	exp : exp OR exp .  (23)

	.  reduce 23


state 66
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp '+' exp .  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'*'  shift 43
	'+'  reduce 13
	'-'  reduce 13
	';'  reduce 13
	']'  reduce 13
	')'  reduce 13
	','  reduce 13


state 67
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp '-' exp .  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'*'  shift 43
	'+'  reduce 14
	'-'  reduce 14
	';'  reduce 14
	']'  reduce 14
	')'  reduce 14
	','  reduce 14


state 68
	exp : exp . '*' exp  (12)
	exp : exp '*' exp .  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  reduce 12
	'-'  reduce 12
	'*'  reduce 12
	';'  reduce 12
	']'  reduce 12
	')'  reduce 12
	','  reduce 12


state 69
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	arglist : exp .  (30)
	instrucciones : exp .  (47)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	')'  reduce 30
	','  reduce 47


state 70
	exp : nombreProc '(' arglist . ')'  (28)

	')'  shift 80
	.  error


state 71
	arglist : instrucciones . ',' exp  (31)
	instrucciones : instrucciones . ',' exp  (48)

	','  shift 81
	.  error


state 72
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	stmt : if_ '(' exp . stop_ ')' '{' linea stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp . stop_ ')' '{' linea stop_ '}' stop_  (33)
	stop_ : .  (42)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	')'  reduce 42

	stop_  goto 82


state 73
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	stmt : while_ '(' exp . stop_ ')' '{' linea stop_ '}' stop_  (34)
	stop_ : .  (42)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	')'  reduce 42

	stop_  goto 83


state 74
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	instrucciones : exp .  (47)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	';'  reduce 47
	')'  reduce 47
	','  reduce 47


state 75
	stmt : for_ '(' instrucciones . stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)
	instrucciones : instrucciones . ',' exp  (48)
	stop_ : .  (42)

	','  shift 84
	';'  reduce 42

	stop_  goto 85


state 76
	stmt : funcion nombreProc '(' . ')' '{' linea null_ '}'  (36)

	')'  shift 86
	.  error


state 77
	stmt : procedimiento nombreProc '(' . ')' '{' linea null_ '}'  (37)

	')'  shift 87
	.  error


state 78
	exp : FNCT '[' exp ']' .  (25)

	.  reduce 25


state 79
	exp : VAR '[' initNum ']' . '=' '{' listaDeListas '}'  (10)

	'='  shift 88
	.  error


state 80
	exp : nombreProc '(' arglist ')' .  (28)

	.  reduce 28


state 81
	arglist : instrucciones ',' . exp  (31)
	instrucciones : instrucciones ',' . exp  (48)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 89
	nombreProc  goto 18


state 82
	stmt : if_ '(' exp stop_ . ')' '{' linea stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp stop_ . ')' '{' linea stop_ '}' stop_  (33)

	')'  shift 90
	.  error


state 83
	stmt : while_ '(' exp stop_ . ')' '{' linea stop_ '}' stop_  (34)

	')'  shift 91
	.  error


state 84
	instrucciones : instrucciones ',' . exp  (48)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 92
	nombreProc  goto 18


state 85
	stmt : for_ '(' instrucciones stop_ . ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)

	';'  shift 93
	.  error


state 86
	stmt : funcion nombreProc '(' ')' . '{' linea null_ '}'  (36)

	'{'  shift 94
	.  error


state 87
	stmt : procedimiento nombreProc '(' ')' . '{' linea null_ '}'  (37)

	'{'  shift 95
	.  error


state 88
	exp : VAR '[' initNum ']' '=' . '{' listaDeListas '}'  (10)

	'{'  shift 96
	.  error


state 89
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	arglist : instrucciones ',' exp .  (31)
	instrucciones : instrucciones ',' exp .  (48)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	')'  reduce 31
	','  reduce 48


state 90
	stmt : if_ '(' exp stop_ ')' . '{' linea stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp stop_ ')' . '{' linea stop_ '}' stop_  (33)

	'{'  shift 97
	.  error


state 91
	stmt : while_ '(' exp stop_ ')' . '{' linea stop_ '}' stop_  (34)

	'{'  shift 98
	.  error


state 92
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	instrucciones : instrucciones ',' exp .  (48)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	';'  reduce 48
	')'  reduce 48
	','  reduce 48


state 93
	stmt : for_ '(' instrucciones stop_ ';' . exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	.  error

	exp  goto 99
	nombreProc  goto 18


state 94
	stmt : funcion nombreProc '(' ')' '{' . linea null_ '}'  (36)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	.  error

	linea  goto 100
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 95
	stmt : procedimiento nombreProc '(' ')' '{' . linea null_ '}'  (37)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	.  error

	linea  goto 101
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 96
	exp : VAR '[' initNum ']' '=' '{' . listaDeListas '}'  (10)

	NUMBER  shift 102
	.  error

	listaDeListas  goto 103
	lista  goto 104


state 97
	stmt : if_ '(' exp stop_ ')' '{' . linea stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp stop_ ')' '{' . linea stop_ '}' stop_  (33)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	.  error

	linea  goto 105
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 98
	stmt : while_ '(' exp stop_ ')' '{' . linea stop_ '}' stop_  (34)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	.  error

	linea  goto 106
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 99
	exp : exp . '*' exp  (12)
	exp : exp . '+' exp  (13)
	exp : exp . '-' exp  (14)
	exp : exp . COMP exp  (16)
	exp : exp . DIFERENTES exp  (17)
	exp : exp . MEN exp  (18)
	exp : exp . MENI exp  (19)
	exp : exp . MAY exp  (20)
	exp : exp . MAYI exp  (21)
	exp : exp . AND exp  (22)
	exp : exp . OR exp  (23)
	stmt : for_ '(' instrucciones stop_ ';' exp . stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)
	stop_ : .  (42)

	COMP  shift 33
	DIFERENTES  shift 34
	MAY  shift 35
	MEN  shift 36
	MAYI  shift 37
	MENI  shift 38
	AND  shift 39
	OR  shift 40
	'+'  shift 41
	'-'  shift 42
	'*'  shift 43
	';'  reduce 42

	stop_  goto 107


state 100
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)
	stmt : funcion nombreProc '(' ')' '{' linea . null_ '}'  (36)
	null_ : .  (41)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	'}'  reduce 41

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	null_  goto 108
	procedimiento  goto 23


state 101
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)
	stmt : procedimiento nombreProc '(' ')' '{' linea . null_ '}'  (37)
	null_ : .  (41)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	'}'  reduce 41

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	null_  goto 109
	procedimiento  goto 23


state 102
	lista : NUMBER .  (52)

	.  reduce 52


state 103
	exp : VAR '[' initNum ']' '=' '{' listaDeListas . '}'  (10)
	listaDeListas : listaDeListas . '|' lista  (51)

	'}'  shift 110
	'|'  shift 111
	.  error


state 104
	listaDeListas : lista .  (50)
	lista : lista . ',' NUMBER  (53)

	','  shift 112
	'}'  reduce 50
	'|'  reduce 50


state 105
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)
	stmt : if_ '(' exp stop_ ')' '{' linea . stop_ '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp stop_ ')' '{' linea . stop_ '}' stop_  (33)
	stop_ : .  (42)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	'}'  reduce 42

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	stop_  goto 113
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 106
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)
	stmt : while_ '(' exp stop_ ')' '{' linea . stop_ '}' stop_  (34)
	stop_ : .  (42)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	'}'  reduce 42

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	stop_  goto 114
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 107
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ . ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)

	';'  shift 115
	.  error


state 108
	stmt : funcion nombreProc '(' ')' '{' linea null_ . '}'  (36)

	'}'  shift 116
	.  error


state 109
	stmt : procedimiento nombreProc '(' ')' '{' linea null_ . '}'  (37)

	'}'  shift 117
	.  error


state 110
	exp : VAR '[' initNum ']' '=' '{' listaDeListas '}' .  (10)

	.  reduce 10


state 111
	listaDeListas : listaDeListas '|' . lista  (51)

	NUMBER  shift 102
	.  error

	lista  goto 118


state 112
	lista : lista ',' . NUMBER  (53)

	NUMBER  shift 119
	.  error


state 113
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ . '}' ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ . '}' stop_  (33)

	'}'  shift 120
	.  error


state 114
	stmt : while_ '(' exp stop_ ')' '{' linea stop_ . '}' stop_  (34)

	'}'  shift 121
	.  error


state 115
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' . instrucciones stop_ ')' '{' linea stop_ '}' stop_  (35)
	instrucciones : .  (46)

	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	RETURN  shift 9
	PARAMETRO  shift 10
	'!'  shift 12
	'('  shift 14
	')'  reduce 46
	','  reduce 46

	exp  goto 74
	nombreProc  goto 18
	instrucciones  goto 122


state 116
	stmt : funcion nombreProc '(' ')' '{' linea null_ '}' .  (36)

	.  reduce 36


state 117
	stmt : procedimiento nombreProc '(' ')' '{' linea null_ '}' .  (37)

	.  reduce 37


state 118
	listaDeListas : listaDeListas '|' lista .  (51)
	lista : lista . ',' NUMBER  (53)

	','  shift 112
	'}'  reduce 51
	'|'  reduce 51


state 119
	lista : lista ',' NUMBER .  (53)

	.  reduce 53


state 120
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' . ELSE '{' linea stop_ '}'  (32)
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' . stop_  (33)
	stop_ : .  (42)

	ELSE  shift 123
	IF  reduce 42
	WHILE  reduce 42
	FOR  reduce 42
	FNCT  reduce 42
	NUMBER  reduce 42
	VAR  reduce 42
	FUNC  reduce 42
	RETURN  reduce 42
	PARAMETRO  reduce 42
	PROC  reduce 42
	'!'  reduce 42
	'\n'  reduce 42
	'}'  reduce 42
	'('  reduce 42

	stop_  goto 124


state 121
	stmt : while_ '(' exp stop_ ')' '{' linea stop_ '}' . stop_  (34)
	stop_ : .  (42)

	.  reduce 42

	stop_  goto 125


state 122
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones . stop_ ')' '{' linea stop_ '}' stop_  (35)
	instrucciones : instrucciones . ',' exp  (48)
	stop_ : .  (42)

	','  shift 84
	')'  reduce 42

	stop_  goto 126


state 123
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' ELSE . '{' linea stop_ '}'  (32)

	'{'  shift 127
	.  error


state 124
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' stop_ .  (33)

	.  reduce 33


state 125
	stmt : while_ '(' exp stop_ ')' '{' linea stop_ '}' stop_ .  (34)

	.  reduce 34


state 126
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ . ')' '{' linea stop_ '}' stop_  (35)

	')'  shift 128
	.  error


state 127
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' ELSE '{' . linea stop_ '}'  (32)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	.  error

	linea  goto 129
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 128
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' . '{' linea stop_ '}' stop_  (35)

	'{'  shift 130
	.  error


state 129
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' ELSE '{' linea . stop_ '}'  (32)
	stop_ : .  (42)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	'}'  reduce 42

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	stop_  goto 131
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 130
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' . linea stop_ '}' stop_  (35)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	.  error

	linea  goto 132
	exp  goto 16
	stmt  goto 17
	nombreProc  goto 18
	if_  goto 19
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 131
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' ELSE '{' linea stop_ . '}'  (32)

	'}'  shift 133
	.  error


state 132
	linea : linea . exp ';'  (6)
	linea : linea . stmt  (7)
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea . stop_ '}' stop_  (35)
	stop_ : .  (42)

	IF  shift 2
	WHILE  shift 3
	FOR  shift 4
	FNCT  shift 5
	NUMBER  shift 6
	VAR  shift 7
	FUNC  shift 8
	RETURN  shift 9
	PARAMETRO  shift 10
	PROC  shift 11
	'!'  shift 12
	'('  shift 14
	'}'  reduce 42

	exp  goto 31
	stmt  goto 32
	nombreProc  goto 18
	if_  goto 19
	stop_  goto 134
	while_  goto 20
	for_  goto 21
	funcion  goto 22
	procedimiento  goto 23


state 133
	stmt : if_ '(' exp stop_ ')' '{' linea stop_ '}' ELSE '{' linea stop_ '}' .  (32)

	.  reduce 32


state 134
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ . '}' stop_  (35)

	'}'  shift 135
	.  error


state 135
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' . stop_  (35)
	stop_ : .  (42)

	.  reduce 42

	stop_  goto 136


state 136
	stmt : for_ '(' instrucciones stop_ ';' exp stop_ ';' instrucciones stop_ ')' '{' linea stop_ '}' stop_ .  (35)

	.  reduce 35


36 terminals, 18 nonterminals
54 grammar rules, 137 states
